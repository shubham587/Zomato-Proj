// Library
import express, { request, response } from "express";
import bcrypt from "bcryptjs";
import  jwt  from "jsonwebtoken";

// Models
import { UserModel } from "../../database/user";

const Router = express.Router();

/* 
Route: /signup
Desc: signup with email and password
params: none
access:public
method:post
*/

Router.post("/signup", async (request, response) => {
    try {
        const { email, phoneNumber} = request.body.credentials;
        // check whether email exists
        await UserModel.findByEmailAndPhone(email, phoneNumber);
        

        // save to DB
        const newUser = await UserModel.create(request.body.credentials)

        
        // generate JWT auth token
        const token = newUser.generateJwtToken();
        // here the ZomatoAPP is the token generated by the jwt
        // return
        return response.status(200).json({token, status: "success"})
        
    } catch (error) {
        return response.status(500).json({ error : error.message });
    }
});

/*
Route     /signin
Des       Signin with email and password
Params    none
Access    Public
Method    POST  
*/
Router.post("/signin", async (request, response) => {
    try {
    const { email, phoneNumber} = request.body.credentials;  
      // await ValidateSignin(request.body.credentials);
  
      const user = await UserModel.findByEmailAndPassword(request.body.credentials);
  
      const token = user.generateJwtToken();
      return response.status(200).json({ token, status: "success" });
    } catch (error) {
      return response.status(500).json({ error: error.message });
    }
  });
  

export default Router;