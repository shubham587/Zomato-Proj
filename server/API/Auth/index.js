// Library
import express, { request, response } from "express";
import bcrypt from "dcryptjs";
import  jwt  from "jsonwebtoken";

// Models
import { UserModel } from "../../database/user";

const Router = express.Router();

/* 
Route: /signup
Desc: signup with email and password
params: none
access:public
method:post
*/

Router.post("/signup", async (request, response) => {
    try {
        const { email, password, fullname, phoneNumber} = request.body.credentials;
        // check whether email exists
        const checkUserByEmail = await UserModel.findOne({email});
        const checkUserByPhone = await UserModel.findOne({phoneNumber});

        if (checkUserByEmail ||  checkUserByPhone)
        {
            return response.json({ error : "user already exist!"});
        }
        // hash the password
        const bcryptSalt = await bcrypt.genSalt(8);

        // save to DB
        await UserModel.create({...request.body.credentials, password: hashedPassword,})

        const hashedPassword = await bcrypt.hash(password, bcryptSalt);
        // generate JWT auth token
        const token = jwt.sign({user : {fullname, email}},"ZomatoAPP")
        // here the ZomatoAPP is the token generated by the jwt
        // return
        return response.status(200).json({token, status: "success"})
        
    } catch (error) {
        return response.status(500).json({ error : error.message });
    }
});

export default Router;